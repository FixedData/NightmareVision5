import funkin.scripting.classes.ScriptedStage;
import funkin.objects.BGSprite;
import funkin.data.ClientPrefs;
import funkin.scripting.classes.ScriptedFlxSprite;
import funkin.data.Conductor;

//make the philylglow scripted object same goes for philylglow!
class philly extends ScriptedStage 
{

    var phillyLightsColors:Array<Int> = [0xFF31A2FD, 0xFF31FD8C, 0xFFFB33F5, 0xFFFD4531, 0xFFFBA633];
    var curLight:Int = -1;

    var phillyWindow:BGSprite;
    var phillyStreet:BGSprite;

    var phillyTrain:ScriptedFlxSprite;


    //glow stuff
	var blammedLightsBlack:FlxSprite;
	var phillyGlowGradient:ScriptedFlxSprite;
	var phillyGlowParticles:FlxTypedGroup;
	var phillyWindowEvent:BGSprite;
	var curLightEvent:Int = -1;






    override function onCreate()
    {
        if(!ClientPrefs.lowQuality) 
        {
            var bg:BGSprite = new BGSprite('week3/sky', -100, 0, 0.1, 0.1);
            add(bg);
        }
    
        var city:BGSprite = new BGSprite('week3/city', -10, 0, 0.3, 0.3);
        city.setGraphicSize(Std.int(city.width * 0.85));
        city.updateHitbox();
        add(city);
    
        phillyWindow = new BGSprite('week3/window', city.x, city.y, 0.3, 0.3);
        phillyWindow.setGraphicSize(Std.int(phillyWindow.width * 0.85));
        phillyWindow.updateHitbox();
        add(phillyWindow);
        phillyWindow.alpha = 0;
    
        if(!ClientPrefs.lowQuality) 
        {
            var streetBehind:BGSprite = new BGSprite('week3/behindTrain', -40, 50);
            add(streetBehind);
        }
    
        
		phillyTrain = ScriptedFlxSprite.init('PhillyTrain',2000, 360);
		add(phillyTrain);
    
        phillyStreet = new BGSprite('week3/street', -40, 50);
        add(phillyStreet);  

        game.gfGroup.zIndex = 10;
        game.dadGroup.zIndex = 11;
        game.boyfriendGroup.zIndex = 12;

        game.refreshZ();

    }


    function randomizeLights()
    {
        curLight = FlxG.random.int(0, phillyLightsColors.length - 1, [curLight]);
        phillyWindow.color = phillyLightsColors[curLight];
        phillyWindow.alpha = 1;
    }


    override function update(elapsed)
    {
		phillyWindow.alpha -= (Conductor.crochet / 1000) * FlxG.elapsed * 1.5;

        if(phillyGlowParticles != null)
        {
            phillyGlowParticles.forEachAlive((particle)->{
                if (particle.alpha <= 0)
                {
                    particle.kill();
                }
            });
        }


        super.update(elapsed);

    }

    override function onBeatHit()
    {
    
        if (game.curBeat % 4 == 0)
        {
            randomizeLights();
        }
        phillyTrain.scriptCall('beatHit',[game.curBeat]);
    }


    override function onEventPushedUnique(event)
    {
        switch (event.event)
        {
            case 'Philly Glow':
                blammedLightsBlack = new FlxSprite(FlxG.width * -0.5, FlxG.height * -0.5).makeScaledGraphic(Std.int(FlxG.width * 2), Std.int(FlxG.height * 2), FlxColor.BLACK);
				blammedLightsBlack.visible = false;
				insert(members.indexOf(phillyStreet), blammedLightsBlack);

				phillyWindowEvent = new BGSprite('week3/window', phillyWindow.x, phillyWindow.y, 0.3, 0.3);
				phillyWindowEvent.setGraphicSize(Std.int(phillyWindowEvent.width * 0.85));
				phillyWindowEvent.updateHitbox();
				phillyWindowEvent.visible = false;
				insert(members.indexOf(blammedLightsBlack) + 1, phillyWindowEvent);


				phillyGlowGradient = ScriptedFlxSprite.init('PhillyGradient',-400,225);
				phillyGlowGradient.visible = false;
				insert(members.indexOf(blammedLightsBlack) + 1, phillyGlowGradient);
                
				if(!ClientPrefs.flashing) phillyGlowGradient.scriptSet('intendedAlpha',0.7);


                Paths.image('week3/particle');
				phillyGlowParticles = new FlxTypedGroup();
				phillyGlowParticles.visible = false;
				insert(members.indexOf(phillyGlowGradient) + 1, phillyGlowParticles);

        }
    }


    override function onEventTrigger(eventName,value1,value2)
    {
        var flValue1:Null<Float> = Std.parseFloat(value1);
		var flValue2:Null<Float> = Std.parseFloat(value2);
		if(Math.isNaN(flValue1)) flValue1 = null;
		if(Math.isNaN(flValue2)) flValue2 = null;

        switch(eventName)
		{
			case "Philly Glow":
				if(flValue1 == null || flValue1 <= 0) flValue1 = 0;
				var lightId:Int = Math.round(flValue1);

				var chars:Array<Character> = [boyfriend, gf, dad];
				switch(lightId)
				{
					case 0:
						if(phillyGlowGradient.visible)
						{
							doFlash();
							if(ClientPrefs.camZooms)
							{
								FlxG.camera.zoom += 0.5;
								game.camHUD.zoom += 0.1;
							}

							blammedLightsBlack.visible = false;
							phillyWindowEvent.visible = false;
							phillyGlowGradient.visible = false;
							phillyGlowParticles.visible = false;
							curLightEvent = -1;

							for (who in chars)
							{
                                if (who != null) who.color = FlxColor.WHITE;
							}
							phillyStreet.color = FlxColor.WHITE;
						}

					case 1: //turn on
						curLightEvent = FlxG.random.int(0, phillyLightsColors.length-1, [curLightEvent]);
						var color:FlxColor = phillyLightsColors[curLightEvent];

						if(!phillyGlowGradient.visible)
						{
							doFlash();
							if(ClientPrefs.camZooms)
							{
								FlxG.camera.zoom += 0.5;
								game.camHUD.zoom += 0.1;
							}

							blammedLightsBlack.visible = true;
							blammedLightsBlack.alpha = 1;
							phillyWindowEvent.visible = true;
							phillyGlowGradient.visible = true;
							phillyGlowParticles.visible = true;
						}
						else if(ClientPrefs.flashing)
						{
							var colorButLower:FlxColor = color;
							// colorButLower.alphaFloat = 0.25;
							FlxG.camera.flash(colorButLower, 0.5, null, true);
						}

						var charColor:FlxColor = color;
						// if(!ClientPrefs.data.flashing) charColor.saturation *= 0.5;
						// else charColor.saturation *= 0.75;

						for (who in chars)
						{
							who.color = charColor;
						}
						phillyGlowParticles.forEachAlive(function(particle)
						{
							particle.color = color;
						});
						phillyGlowGradient.color = color;
						phillyWindowEvent.color = color;

						// color.brightness *= 0.5;
						phillyStreet.color = color;

					case 2: // spawn particles
						if(!ClientPrefs.lowQuality)
						{
                            var particlesNum:Int = FlxG.random.int(3, 6);
                            var width:Float = (2000 / particlesNum);
                            
							for (j in 0...3)
							{
								for (i in 0...particlesNum)
								{
									phillyGlowParticles.add(getParticle(width,j,i));
								}
							}
						}
						phillyGlowGradient.scriptCall('bop',[]);
				}
		}
    }


    function getParticle(width:Float,index:Int,index2:Int)
    {

        var color:FlxColor = phillyLightsColors[curLightEvent];

        var particle = phillyGlowParticles.recycle(ScriptedFlxSprite, () -> ScriptedFlxSprite.init('PhillyParticle',0,0,phillyLightsColors[color]));

        particle.color = color;

        particle.alpha = 1;

        particle.x = -400 + width * index2 + FlxG.random.float(-width / 5, width / 5);
        particle.y = phillyGlowGradient.scriptGet('originalY') + 200 + (FlxG.random.float(0, 125) + index * 40);

        particle.scriptCall('setValues',[]);

        phillyGlowParticles.add(particle);

        return particle;
    }

    function doFlash()
    {
        var color:FlxColor = FlxColor.WHITE;
        if(!ClientPrefs.flashing) color = 0x84FFFFFF;

        FlxG.camera.flash(color, 0.15, null, true);
    }
}